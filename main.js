!function(){"use strict";function e(e,t){if(e<t-1&&e>0)return"top";if(e<t**2-1&&e>t**2-t)return"bottom";for(let s=1;s<t-1;s+=1){if(e===t*s)return"left";if(e===t*s+(t-1))return"right"}switch(e){case 0:return"top-left";case t-1:return"top-right";case t*(t-1):return"bottom-left";case t**2-1:return"bottom-right";default:return"center"}}class t{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[],this.score=0,this.level=0,this.recordScore=0}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(t){if(!this.container)throw new Error("GamePlay not bind to DOM");this.checkBinding(),this.container.innerHTML=`\n            <div class="message-container"></div>\n            <div class="controls">\n                <div class="buttons">\n                    <button data-id="action-restart" class="btn">New Game</button>\n                    <button data-id="action-save" class="btn">Save Game</button>\n                    <button data-id="action-load" class="btn">Load Game</button>\n                </div>\n                <div class="score">\n                    <div class="score-level">\n                        Ваш уровень: ${this.level} \n                    </div>\n                    <div class="score-current">\n                        Ваши очки: ${Math.floor(this.score)} \n                    </div>\n                    <div class="score-record">\n                        Текущий рекорд: ${Math.floor(this.recordScore)}\n                    </div>\n                </div>\n            </div>\n            \n            <div class="board-container">\n                <div data-id="board" class="board"></div>\n            </div>\n        `,this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t),this.boardEl.style.setProperty("--grid-columns",this.boardSize);for(let t=0;t<this.boardSize**2;t+=1){const s=document.createElement("div");s.classList.add("cell","map-tile",`map-tile-${e(t,this.boardSize)}`),s.addEventListener("mouseenter",(e=>this.onCellEnter(e))),s.addEventListener("mouseleave",(e=>this.onCellLeave(e))),s.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(s)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],a=document.createElement("div");a.classList.add("character",s.character.type);const r=document.createElement("div");r.classList.add("health-level");const i=document.createElement("div");i.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),i.style.width=`${s.character.health}%`,r.appendChild(i),a.appendChild(r),e.appendChild(a),document.querySelector(".score").innerHTML=`\n                    <div class="score-level">\n                        Ваш уровень: ${this.level} \n                    </div>\n                    <div class="score-current">\n                        Ваши очки: ${Math.floor(this.score)} \n                    </div>\n                    <div class="score-record">\n                        Текущий рекорд: ${Math.floor(this.recordScore)}\n                    </div>\n                `}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}removeAllCellListeners(){this.cellEnterListeners=[],this.cellLeaveListeners=[],this.cellClickListeners=[]}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}deselectAllCells(){this.cells.forEach((e=>{e.classList.remove(...Array.from(e.classList).filter((e=>e.startsWith("selected"))))}))}showCellTooltip(e){const t=e.character;this.cells[e.position].title=`${t.type}\n${t.level}⚔${t.attack}${t.defence}❤${t.health}`}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const a=this.cells[e],r=document.createElement("span");r.textContent=t,r.classList.add("damage"),a.appendChild(r),r.addEventListener("animationend",(()=>{a.removeChild(r),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}showModalMessage(e,t="info"){const s=this.container.querySelector(".message-container");if(s){const a=document.createElement("div");switch(a.classList.add("messagebox"),a.textContent=e,t){case"info":a.classList.add("info");break;case"error":a.classList.add("error")}s.appendChild(a),setTimeout((()=>{a.remove()}),5e3)}}}class s{constructor(e,t,s,a="generic"){if("Character"===new.target.name)throw Error("Персонаж должен быть экземпляром Character");if(e<1)throw new Error("Уровень персонажа не может быть меньше 1");this.level=e,this.attack=t,this.defence=s,this.health=50,this.type=a,this.setLevelStats(e)}levelUp(){if(!(this.health>0))throw new Error("Нельзя повысить уровень умершего");this.level+=1,this.attack=Math.floor(Math.max(this.attack,this.attack*((80+this.health)/100))),this.health=this.health+30<100?this.health+30:100}setLevelStats(e){this.attack=Math.floor(this.attack*(1+(e-1)/10)),this.defence=Math.floor(this.defence*(1+(e-1)/10))}}class a{constructor(e,t){if(!(e instanceof s))throw new Error("Персонаж должен быть экземпляром Character");if("number"!=typeof t)throw new Error("Позиция может быть только числом");this.character=e,this.position=t}}function r(e,t){if("number"!=typeof t)throw new Error("There is wrong boardSize");if(!(e instanceof a))throw new Error("There must be a class type PositionedCharacter");const s=e.position,{moveDistance:r,attackDistance:i}=e.character,o=[],n=[],l=Math.floor(s/t),c=s%t;for(let e=-r;e<=r;e++)for(let s=-r;s<=r;s++)if(0===e||0===s||Math.abs(e)===Math.abs(s)){const a=l+e,r=c+s;if(a>=0&&a<t&&r>=0&&r<t){const e=a*t+r;o.push(e)}}for(let e=-i;e<=i;e++)for(let s=-i;s<=i;s++){const a=l+e,r=c+s;if(a>=0&&a<t&&r>=0&&r<t){const e=a*t+r;n.push(e)}}return{...e,move:o,attack:n}}function i(e,s){const{gamePlay:a}=s,i=s,o=r(e,a.boardSize),n=i.userPositionedCharacters.filter((e=>o.attack.includes(e.position))).sort(((e,t)=>e.character.health-t.character.health))[0];if(n){const e=Math.floor(Math.max(o.character.attack-n.character.defence,.1*o.character.attack));return void a.showDamage(n.position,e).then((()=>{n.character.health-=e,a.score-=e,n.character.health<=0&&(o.character.levelUp(),n.position===i.activeCharacter.position&&(a.score-=n.character.defence,i.activeCharacter=void 0,a.deselectAllCells()),i.userPositionedCharacters.splice(i.userPositionedCharacters.indexOf(n),1),i.userPositionedCharacters.length?a.redrawPositions([...i.userPositionedCharacters,...i.enemyPositionedCharacters]):(t.showMessage("Game over"),i.stateService.saveRecord(t.recordScore),i.gamePlay.removeAllCellListeners())),i.activeCharacter?a.selectCell(i.activeCharacter.position):a.deselectAllCells()}))}const l=(e,t)=>t.some((t=>t.position===e)),c=o.move.filter((e=>!(l(e,i.userPositionedCharacters)||l(e,i.enemyPositionedCharacters)))),h=c[Math.floor(Math.random()*c.length)],d=i.enemyPositionedCharacters.findIndex((e=>e.position===o.position));i.enemyPositionedCharacters[d].position=h,a.redrawPositions([...i.userPositionedCharacters,...i.enemyPositionedCharacters])}var o={prairie:"prairie",desert:"desert",arctic:"arctic",mountain:"mountain"},n="auto",l="pointer",c="crosshair",h="not-allowed";class d extends s{constructor(e){super(e,25,25,"Bowman"),this.moveDistance=2,this.attackDistance=2}}class m extends s{constructor(e){super(e,10,10,"Daemon"),this.moveDistance=1,this.attackDistance=4}}class C extends s{constructor(e){super(e,10,40,"Magician"),this.moveDistance=1,this.attackDistance=4}}class v extends s{constructor(e){super(e,40,10,"Swordsman"),this.moveDistance=4,this.attackDistance=1}}class u extends s{constructor(e){super(e,40,10,"Undead"),this.moveDistance=4,this.attackDistance=1}}class y extends s{constructor(e){super(e,10,25,"Zombie"),this.moveDistance=1,this.attackDistance=1}}class f{constructor(e){if(!e)throw new Error("GameController instance is required");this.gameController=e}getPositionedCharacters(e){const t={Bowman:d,Daemon:m,Magician:C,Swordsman:v,Undead:u,Zombie:y};return e.map((e=>{const s=new t[e.character.type](e.character.level);return s.health=e.character.health,s.defence=e.character.defence,s.attack=e.character.attack,new a(s,e.position)}))}from(e){if(!e)throw new Error("Got wrong state");try{this.gameController.gamePlay.level=e.level,this.gameController.activeCharacter=void 0,this.gameController.gamePlay.boardSize=e.boardSize,this.gameController.gamePlay.score=e.score,this.gameController.userPositionedCharacters=this.getPositionedCharacters(e.userPositionedCharacters),this.gameController.enemyPositionedCharacters=this.getPositionedCharacters(e.enemyPositionedCharacters),this.gameController.gamePlay.deselectAllCells(),this.gameController.gamePlay.redrawPositions([...e.userPositionedCharacters,...e.enemyPositionedCharacters])}catch(e){throw new Error("Got wrong state data")}}}class g{constructor(){this.members=new Set}add(e){if(this.members.has(e))throw new Error("Этот персонаж уже присутствует в команде");this.members.add(e)}addAll(...e){e.forEach((e=>{this.members.has(e)||this.members.add(e)}))}toArray(){return Array.from(this.members)}*[Symbol.iterator](){for(const e of this.members)yield e}*randomIterator(){for(;;){const e=Math.floor(Math.random()*this.members.size);yield this.toArray()[e]}}}function P(e,t,s){const a=new g,r=Array.from({length:s},(()=>function*(e,t){for(;;){const s=Math.floor(Math.random()*t+1),a=e[Math.floor(Math.random()*e.length)];yield new a(s)}}(e,t).next().value));return a.addAll(...r),a}const p=new t;p.bindToDOM(document.querySelector("#game-container"));const w=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}saveRecord(e){this.storage.setItem("record",e)}loadRecord(){return this.storage.getItem("record")}}(localStorage),L=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.userTypeCharacters=[d,v,C],this.enemyTypeCharacters=[u,m,y],this.activeCharacter=void 0,this.characterCount=2}newGame(){this.gamePlay.removeAllCellListeners(),this.gamePlay.level=0,this.characterCount=2,this.gamePlay.score=0,this.nextLevel(),this.gamePlay.addCellEnterListener((e=>{this.onCellEnter(e)})),this.gamePlay.addCellLeaveListener((e=>{this.onCellLeave(e)})),this.gamePlay.addCellClickListener((e=>{this.onCellClick(e)}))}init(){this.gamePlay.recordScore=this.stateService.loadRecord(),this.newGame(),this.gamePlay.addNewGameListener((()=>{this.newGame(),this.gamePlay.showModalMessage("Новая игра загружена")})),this.gamePlay.addSaveGameListener((()=>{const e={level:this.gamePlay.level,boardSize:this.gamePlay.boardSize,userPositionedCharacters:this.userPositionedCharacters,enemyPositionedCharacters:this.enemyPositionedCharacters,score:this.gamePlay.score};this.stateService.save(e),this.gamePlay.showModalMessage("Игра сохранена")})),this.gamePlay.addLoadGameListener((()=>{new f(this).from(this.stateService.load()),this.gamePlay.showModalMessage("Игра загружена")}))}onCellClick(e){let t=this.userPositionedCharacters.find((t=>t.position===e));if(t)return void(this.activeCharacter?.position===e?(this.gamePlay.deselectCell(e),this.activeCharacter=void 0):(this.gamePlay.deselectAllCells(),this.gamePlay.selectCell(e),this.activeCharacter=r(t,this.gamePlay.boardSize)));const s=this.enemyPositionedCharacters.find((t=>t.position===e));if(s){if(this.activeCharacter)if(this.activeCharacter.attack.includes(e)){const t=this.activeCharacter.character.attack,a=Math.floor(Math.max(t-s.character.defence,.1*t));this.gamePlay.showDamage(e,a).then((()=>{s.character.health-=a,this.gamePlay.score+=a,s.character.health<=0&&(this.gamePlay.score+=s.character.defence,this.activeCharacter.character.levelUp(),this.enemyPositionedCharacters.splice(this.enemyPositionedCharacters.indexOf(s),1),!this.enemyPositionedCharacters.length)?this.nextLevel():(this.gamePlay.redrawPositions([...this.userPositionedCharacters,...this.enemyPositionedCharacters]),i(s,this))}))}else this.gamePlay.showModalMessage("Выбраный персонаж не может атаковать указанного противника","error")}else if(this.activeCharacter?.move.includes(e)){this.gamePlay.deselectCell(this.activeCharacter.position),t=this.userPositionedCharacters.find((e=>e.position===this.activeCharacter.position)),t.position=e,this.gamePlay.redrawPositions([...this.userPositionedCharacters,...this.enemyPositionedCharacters]),this.activeCharacter=r(t,this.gamePlay.boardSize),this.gamePlay.selectCell(e);const s=Math.floor(Math.random()*this.enemyPositionedCharacters.length);i(this.enemyPositionedCharacters[s],this)}else this.activeCharacter&&this.gamePlay.showModalMessage("Выбраный персонаж не может переместиться в указанную зону","error")}onCellEnter(e){const t=this.enemyPositionedCharacters.find((t=>t.position===e)),s=this.userPositionedCharacters.find((t=>t.position===e));this.activeCharacter&&(this.gamePlay.deselectAllCells(),this.gamePlay.selectCell(this.activeCharacter.position),t&&this.activeCharacter.attack.includes(e)?(this.gamePlay.setCursor(c),this.gamePlay.selectCell(e,"red")):s?this.gamePlay.setCursor(l):t||s||!this.activeCharacter.move.includes(e)?this.gamePlay.setCursor(h):(this.gamePlay.setCursor(l),this.gamePlay.selectCell(e,"green"))),t&&this.gamePlay.showCellTooltip(t),s&&this.gamePlay.showCellTooltip(s)}onCellLeave(e){this.gamePlay.hideCellTooltip(e),this.gamePlay.deselectCell(e),this.gamePlay.setCursor(n)}nextLevel(){this.gamePlay.level+=1,this.characterCount+=1,this.activeCharacter=void 0,this.gamePlay.drawUi(Object.values(o)[(this.gamePlay.level-1)%4]),this.userTeam=P(this.userTypeCharacters,this.gamePlay.level,this.characterCount),this.enemyTeam=P(this.enemyTypeCharacters,this.gamePlay.level,this.characterCount);const e=this.startPositionList(this.userTeam,"user"),t=this.startPositionList(this.enemyTeam,"enemy");this.userPositionedCharacters=e||[],this.enemyPositionedCharacters=t||[],this.gamePlay.deselectAllCells(),this.gamePlay.redrawPositions([...this.userPositionedCharacters,...this.enemyPositionedCharacters])}startPositionList(e,t,s=this.gamePlay.boardSize){const r=[];for(let e="user"===t?0:s-2;e<s**2-1;e+=s)r.push(e),r.push(e+1);return e.toArray().map((e=>{const t=r[Math.floor(Math.random()*r.length)];return r.splice(r.indexOf(t),1),new a(e,t)}))}}(p,w);L.init()}();